# Image de base FrankenPHP
FROM dunglas/frankenphp:latest-php8.3


# Installer les extensions PHP nécessaires pour Laravel
RUN install-php-extensions \
   pdo_mysql \
   mysqli \
   mbstring \
   xml \
   zip \
   bcmath \
   gd \
   redis \
   opcache \
   pcntl


# Installer netcat et composer
RUN apt-get update && apt-get install -y netcat-traditional unzip && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer


# Définir le répertoire de travail
WORKDIR /app


# Copier TOUT le projet Laravel
COPY . /app


# DEBUG: Vérifier ce qui a été copié
RUN echo "=== FILES COPIED ===" && ls -la /app/


# Vérifier les fichiers essentiels
RUN test -f /app/artisan && echo "✓ artisan found" || (echo "✗ artisan missing" && exit 1)
RUN test -f /app/composer.json && echo "✓ composer.json found" || (echo "✗ composer.json missing" && exit 1)


# Installer les dépendances
RUN composer install --no-dev --optimize-autoloader


# Utiliser .env s'il existe, sinon copier .env.example
# RUN if [ ! -f /app/.env ]; then cp /app/.env.example /app/.env; fi


# Créer les répertoires nécessaires et définir les permissions
RUN mkdir -p /app/storage/logs \
   && mkdir -p /app/storage/framework/cache/data \
   && mkdir -p /app/storage/framework/sessions \
   && mkdir -p /app/storage/framework/views \
   && mkdir -p /app/storage/app \
   && mkdir -p /app/bootstrap/cache \
   && chown -R www-data:www-data /app \
   && chmod -R 775 /app/storage /app/bootstrap/cache \
   && chmod +x /app/artisan


# Créer un script de démarrage CORRIGÉ
RUN echo '#!/bin/bash\n\
set -e\n\
\n\
echo "=== Laravel FrankenPHP Container Starting ==="\n\
\n\
# Vérifier les fichiers essentiels\n\
if [ ! -f /app/artisan ]; then\n\
   echo "ERROR: artisan file not found!"\n\
   ls -la /app/\n\
   exit 1\n\
fi\n\
\n\
echo "Waiting for database connection..."\n\
until nc -z mysql_database 3306; do\n\
   echo "Database not ready, waiting..."\n\
   sleep 3\n\
done\n\
\n\
echo "Database ready! Setting up Laravel..."\n\
\n\
# Générer la clé d application uniquement si pas déjà définie\n\
if [ -z "$APP_KEY" ] || [ "$APP_KEY" = "" ]; then\n\
   echo "Generating application key..."\n\
   php /app/artisan key:generate --force\n\
else\n\
   echo "APP_KEY already set via environment variables"\n\
fi\n\
\n\
# Nettoyer le cache\n\
echo "Clearing caches..."\n\
php /app/artisan config:clear || true\n\
php /app/artisan cache:	clear || true\n\
php /app/artisan route:clear || true\n\
php /app/artisan view:clear || true\n\
\n\
# Attendre un peu plus pour la DB\n\
echo "Final database check..."\n\
sleep 5\n\
\n\
# Exécuter les migrations\n\
echo "Running migrations..."\n\
php artisan migrate:status\n\
php artisan migrate --force --step || echo "Migration had issues, but continuing..."\n\
\n\
echo "=== Starting FrankenPHP with Laravel Octane ==="\n\
exec php /app/artisan octane:start --server=frankenphp --host=0.0.0.0 --port=80 --admin-port=2019\n\
' > /start.sh


RUN chmod +x /start.sh


# Exposer les ports
EXPOSE 80 8001 443 2019


# Utiliser le script de démarrage
CMD ["/start.sh"]



