# Image de base FrankenPHP
FROM dunglas/frankenphp:latest-php8.3


# Installer les extensions PHP nécessaires pour Laravel
RUN install-php-extensions \
   pdo_mysql \
   mysqli \
   mbstring \
   xml \
   zip \
   bcmath \
   gd \
   redis \
   opcache \
   pcntl


# Installer netcat et composer
RUN apt-get update && apt-get install -y netcat-traditional unzip && rm -rf /var/lib/apt/lists/*
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer


# Définir le répertoire de travail
WORKDIR /app


# Copier TOUT le projet Laravel
COPY . /app


# DEBUG: Vérifier ce qui a été copié
RUN echo "=== FILES COPIED ===" && ls -la /app/


# Vérifier les fichiers essentiels
RUN test -f /app/artisan && echo "✓ artisan found" || (echo "✗ artisan missing" && exit 1)
RUN test -f /app/composer.json && echo "✓ composer.json found" || (echo "✗ composer.json missing" && exit 1)


# Installer les dépendances
RUN composer install --no-dev --optimize-autoloader


# Utiliser .env s'il existe, sinon copier .env.example
# RUN if [ ! -f /app/.env ]; then cp /app/.env.example /app/.env; fi


# Créer les répertoires nécessaires et définir les permissions
RUN mkdir -p /app/storage/logs \
   && mkdir -p /app/storage/framework/cache/data \
   && mkdir -p /app/storage/framework/sessions \
   && mkdir -p /app/storage/framework/views \
   && mkdir -p /app/storage/app \
   && mkdir -p /app/bootstrap/cache \
   && chown -R www-data:www-data /app \
   && chmod -R 775 /app/storage /app/bootstrap/cache \
   && chmod +x /app/artisan


# Créer un script de démarrage CORRIGÉ
COPY docker-entrypoint.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/docker-entrypoint.sh

# Exposer les ports
EXPOSE 80 443


# Utiliser le script de démarrage
CMD ["/usr/local/bin/docker-entrypoint.sh"]



